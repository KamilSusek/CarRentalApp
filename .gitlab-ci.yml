stages:
# -------- Docker ------- #
    - test
    - build
    - deploy
# ------- Develop ------- #
    - build_develop
    - deploy_develop
# -------- Deploy ------- #
    - build_deploy
    - deploy_deploy
# ------ Production ----- #
    - build_prod
    - deploy_prod
        
# -------- Test --------- # 
# - Run on all branches - #
test: 
    stage: test
    script:
        - echo "Test will take about 15 min, go relax :D"
        - cd frontend/car-rental-app
        - docker build -t frontendtest .
        - docker run -d --name fronttest frontendtest 
        - docker exec -d fronttest npm test 
        - docker rm fronttest -f
            
# - Return to main directory - #
        - cd ..
        - cd ..
    
        - cd backend
        - docker build -t backendtest .
        - docker run -d --name backtest backendtest
        - docker exec -d backtest gradle test 
        - docker rm backtest -f 
        
        - cd ..
        - echo "Success :D"
    tags:
        - test
    
# -------- Docker -------- #
build_docker:
    stage: build
    script:
        - docker-compose -f docker-compose.docker.yml build
    tags:
        - build
    only:
        - Docker
        
deploy_docker:
    stage: deploy
    script:
        # Ta opcja tez nie dziala
        - docker-compose -f docker-compose.docker.yml down
        - docker-compose -f docker-compose.docker.yml up -d
    tags: 
        - deploy
    only:
        - Docker 
        
# -------- Develop -------- #
build_develop:
    stage: build_develop
    script:
        - docker-compose -f docker-compose.develop.yml build
    tags:
        - build_develop
    only:
        - BackendRoleBasedAuthorization
        
deploy_develop:
    stage: deploy_develop
    script:
        - docker-compose -f docker-compose.develop.yml down
        - docker-compose -f docker-compose.develop.yml up -d
    tags: 
        - deploy_develop
    only:
        - BackendRoleBasedAuthorization
        
# -------- Deploy -------- #
build_deploy:
    stage: build_deploy
    script:
        - docker-compose -f docker-compose.deploy.yml build
    tags:
        - build_deploy
    only:
        - deploy
        
deploy_deploy:
    stage: deploy_deploy
    script:
        - docker-compose -f docker-compose.deploy.yml down
        - docker-compose -f docker-compose.deploy.yml up -d
    tags: 
        - deploy_deploy
    only: 
        - deploy
        
 # -------- Production -------- #
build_production:
    stage: build_prod
    script:
        - docker-compose build 
    tags:
        - build_prod
    only:
        - master
               
deploy_production:
    stage: deploy_prod
    script:
        - docker-compose down
        - docker-compose up -d
    tags: 
        - deploy_prod
    only: 
        - master

        
    #     - |
    #     if [ -z `docker-compose ps -q car_rental_backend` ] || [ -z `docker ps -q --no-trunc | grep $(docker-compose ps -q car_rental_backend)` ]; then 
    #       echo "Backend it's not running."; 
    #     else 
    #       docker-compose down car_rental_backend   
    #     fi
    #   - |
    #     if [ -z `docker-compose ps -q car_rental_frontend` ] || [ -z `docker ps -q --no-trunc | grep $(docker-compose ps -q car_rental_frontend)` ]; then 
    #         echo "Frontend it's not running."; 
    #     else 
    #         docker-compose down car_rental_frontend   
    #     fi
    #   - |
    #     if [ -z `docker-compose ps -q car_rental_dbpostgres` ] || [ -z `docker ps -q --no-trunc | grep $(docker-compose ps -q car_rental_dbpostgres)` ]; then 
    #         echo "Data base it's not running."; 
    #     else 
    #         docker-compose down car_rental_dbpostgres   
    #     fi